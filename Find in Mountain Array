/**
 * // This is MountainArray's API interface.
 * // You should not implement it, or speculate about its implementation
 * interface MountainArray {
 *     public int get(int index) {}
 *     public int length() {}
 * }
 */
 
class Solution {
    public int findInMountainArray(int target, MountainArray mountainArr) {
        int maxindex=FindIndex(mountainArr);
        int value=AscenArray(mountainArr,target,maxindex);
        if(value==-1){
            return DesceArray(mountainArr,target,maxindex);
        }else{
            return value;
        }
    }

    static int FindIndex(MountainArray mountainArr){
        int start=0;
        int end=mountainArr.length()-1;
        while(start<end){
            int mid=start+(end-start)/2;
            if(mountainArr.get(mid)>mountainArr.get(mid+1)){
                end=mid;
            }else{
                start=mid+1;
            }
        }
        return start;
    }
    static int AscenArray(MountainArray mountainArr,int target,int maxindex){
        int start=0;
        int end=maxindex;
        while(start<=end){
            int mid=start+(end-start)/2;
            if(target>mountainArr.get(mid)){
                start=mid+1;
            }else if(target<mountainArr.get(mid)){
                end=mid-1;
            }else{
                return mid;
            }
        }
        return -1;
    }
    static int DesceArray(MountainArray mountainArr,int target,int maxindex){
        int start=maxindex;
        int end=mountainArr.length()-1;
        while(start<=end){
            int mid=start+(end-start)/2;
            if(target>mountainArr.get(mid)){
                end=mid-1;
            }else if(target<mountainArr.get(mid)){
                start=mid+1;
            }else{
                return mid;
            }
        }
        return -1;
    }
}
